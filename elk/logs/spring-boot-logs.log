{"@timestamp":"2025-02-20T16:05:39.327+05:30","@version":"1","message":"Starting BookStoreApplication using Java 23.0.2 with PID 14767 (/Users/anirudhkrishnakandukuri/Downloads/book-store/target/classes started by anirudhkrishnakandukuri in /Users/anirudhkrishnakandukuri/Downloads/book-store)","logger_name":"com.thinkconstructive.book_store.BookStoreApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:39.331+05:30","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.thinkconstructive.book_store.BookStoreApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:39.362+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:39.363+05:30","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:39.895+05:30","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:39.896+05:30","@version":"1","message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:39.963+05:30","@version":"1","message":"Finished Spring Data repository scanning in 63 ms. Found 0 Reactive MongoDB repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:39.967+05:30","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:39.967+05:30","@version":"1","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:39.985+05:30","@version":"1","message":"Finished Spring Data repository scanning in 17 ms. Found 3 MongoDB repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:39.993+05:30","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:39.994+05:30","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:40.003+05:30","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.thinkconstructive.book_store.feature_report.repo.ReportRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:40.003+05:30","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.thinkconstructive.book_store.feature_transactions.repo.TransactionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:40.003+05:30","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.thinkconstructive.book_store.feature_user.repo.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:40.003+05:30","@version":"1","message":"Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:40.289+05:30","@version":"1","message":"Tomcat initialized with port 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:40.297+05:30","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:40.297+05:30","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.34]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:40.320+05:30","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:40.320+05:30","@version":"1","message":"Root WebApplicationContext: initialization completed in 957 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:40.534+05:30","@version":"1","message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|sync|spring-boot\", \"version\": \"5.2.1\"}, \"os\": {\"type\": \"Darwin\", \"name\": \"Mac OS X\", \"architecture\": \"aarch64\", \"version\": \"14.4.1\"}, \"platform\": \"Java/Homebrew/23.0.2\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=NettyTransportSettings{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@21820480, socketChannelClass=null, allocator=null, sslContext=null}, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@4e6f5ab2], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@e8e43d3, com.mongodb.Jep395RecordCodecProvider@4a5c9736, com.mongodb.KotlinCodecProvider@7bcb2cf9]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@4f4543f8], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}","logger_name":"org.mongodb.driver.client","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:40.588+05:30","@version":"1","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=25780459, minRoundTripTimeNanos=0}","logger_name":"org.mongodb.driver.cluster","thread_name":"cluster-ClusterId{value='67b7057cedd8be4b9dd89b3b', description='null'}-localhost:27017","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:40.742+05:30","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:40.777+05:30","@version":"1","message":"Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider","logger_name":"org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:40.778+05:30","@version":"1","message":"Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR","logger_name":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2025-02-20T16:05:41.065+05:30","@version":"1","message":"Exposing 1 endpoint beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:41.136+05:30","@version":"1","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2817209, minRoundTripTimeNanos=0}","logger_name":"org.mongodb.driver.cluster","thread_name":"cluster-ClusterId{value='67b7057dedd8be4b9dd89b3c', description='null'}-localhost:27017","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:41.139+05:30","@version":"1","message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|reactive-streams|spring-boot\", \"version\": \"5.2.1\"}, \"os\": {\"type\": \"Darwin\", \"name\": \"Mac OS X\", \"architecture\": \"aarch64\", \"version\": \"14.4.1\"}, \"platform\": \"Java/Homebrew/23.0.2\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=NettyTransportSettings{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@d5c8721, socketChannelClass=null, allocator=null, sslContext=null}, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@4e6f5ab2], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@e8e43d3, com.mongodb.Jep395RecordCodecProvider@4a5c9736, com.mongodb.KotlinCodecProvider@7bcb2cf9]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@4f4543f8], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}","logger_name":"org.mongodb.driver.client","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:41.292+05:30","@version":"1","message":"Tomcat started on port 8081 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:41.313+05:30","@version":"1","message":"ConsumerConfig values: \n\tallow.auto.create.topics = true\n\tauto.commit.interval.ms = 5000\n\tauto.include.jmx.reporter = true\n\tauto.offset.reset = earliest\n\tbootstrap.servers = [localhost:9092]\n\tcheck.crcs = true\n\tclient.dns.lookup = use_all_dns_ips\n\tclient.id = consumer-report_group-1\n\tclient.rack = \n\tconnections.max.idle.ms = 540000\n\tdefault.api.timeout.ms = 60000\n\tenable.auto.commit = false\n\tenable.metrics.push = true\n\texclude.internal.topics = true\n\tfetch.max.bytes = 52428800\n\tfetch.max.wait.ms = 500\n\tfetch.min.bytes = 1\n\tgroup.id = report_group\n\tgroup.instance.id = null\n\tgroup.protocol = classic\n\tgroup.remote.assignor = null\n\theartbeat.interval.ms = 3000\n\tinterceptor.classes = []\n\tinternal.leave.group.on.close = true\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\n\tisolation.level = read_uncommitted\n\tkey.deserializer = class org.apache.kafka.common.serialization.StringDeserializer\n\tmax.partition.fetch.bytes = 1048576\n\tmax.poll.interval.ms = 300000\n\tmax.poll.records = 500\n\tmetadata.max.age.ms = 300000\n\tmetadata.recovery.strategy = none\n\tmetric.reporters = []\n\tmetrics.num.samples = 2\n\tmetrics.recording.level = INFO\n\tmetrics.sample.window.ms = 30000\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]\n\treceive.buffer.bytes = 65536\n\treconnect.backoff.max.ms = 1000\n\treconnect.backoff.ms = 50\n\trequest.timeout.ms = 30000\n\tretry.backoff.max.ms = 1000\n\tretry.backoff.ms = 100\n\tsasl.client.callback.handler.class = null\n\tsasl.jaas.config = null\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\n\tsasl.kerberos.min.time.before.relogin = 60000\n\tsasl.kerberos.service.name = null\n\tsasl.kerberos.ticket.renew.jitter = 0.05\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\n\tsasl.login.callback.handler.class = null\n\tsasl.login.class = null\n\tsasl.login.connect.timeout.ms = null\n\tsasl.login.read.timeout.ms = null\n\tsasl.login.refresh.buffer.seconds = 300\n\tsasl.login.refresh.min.period.seconds = 60\n\tsasl.login.refresh.window.factor = 0.8\n\tsasl.login.refresh.window.jitter = 0.05\n\tsasl.login.retry.backoff.max.ms = 10000\n\tsasl.login.retry.backoff.ms = 100\n\tsasl.mechanism = GSSAPI\n\tsasl.oauthbearer.clock.skew.seconds = 30\n\tsasl.oauthbearer.expected.audience = null\n\tsasl.oauthbearer.expected.issuer = null\n\tsasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000\n\tsasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000\n\tsasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100\n\tsasl.oauthbearer.jwks.endpoint.url = null\n\tsasl.oauthbearer.scope.claim.name = scope\n\tsasl.oauthbearer.sub.claim.name = sub\n\tsasl.oauthbearer.token.endpoint.url = null\n\tsecurity.protocol = PLAINTEXT\n\tsecurity.providers = null\n\tsend.buffer.bytes = 131072\n\tsession.timeout.ms = 45000\n\tsocket.connection.setup.timeout.max.ms = 30000\n\tsocket.connection.setup.timeout.ms = 10000\n\tssl.cipher.suites = null\n\tssl.enabled.protocols = [TLSv1.2, TLSv1.3]\n\tssl.endpoint.identification.algorithm = https\n\tssl.engine.factory.class = null\n\tssl.key.password = null\n\tssl.keymanager.algorithm = SunX509\n\tssl.keystore.certificate.chain = null\n\tssl.keystore.key = null\n\tssl.keystore.location = null\n\tssl.keystore.password = null\n\tssl.keystore.type = JKS\n\tssl.protocol = TLSv1.3\n\tssl.provider = null\n\tssl.secure.random.implementation = null\n\tssl.trustmanager.algorithm = PKIX\n\tssl.truststore.certificates = null\n\tssl.truststore.location = null\n\tssl.truststore.password = null\n\tssl.truststore.type = JKS\n\tvalue.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer\n","logger_name":"org.apache.kafka.clients.consumer.ConsumerConfig","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:41.340+05:30","@version":"1","message":"initializing Kafka metrics collector","logger_name":"org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:41.378+05:30","@version":"1","message":"Kafka version: 3.8.1","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:41.379+05:30","@version":"1","message":"Kafka commitId: 70d6ff42debf7e17","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:41.379+05:30","@version":"1","message":"Kafka startTimeMs: 1740047741377","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:41.387+05:30","@version":"1","message":"[Consumer clientId=consumer-report_group-1, groupId=report_group] Subscribed to topic(s): report_topic","logger_name":"org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:41.405+05:30","@version":"1","message":"Started BookStoreApplication in 2.452 seconds (process running for 2.757)","logger_name":"com.thinkconstructive.book_store.BookStoreApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:41.545+05:30","@version":"1","message":"[Consumer clientId=consumer-report_group-1, groupId=report_group] Cluster ID: -0ohZOxFT0yFzz6xoJrv6w","logger_name":"org.apache.kafka.clients.Metadata","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:41.559+05:30","@version":"1","message":"[Consumer clientId=consumer-report_group-1, groupId=report_group] Discovered group coordinator 192.168.0.101:9092 (id: 2147483647 rack: null)","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:41.561+05:30","@version":"1","message":"[Consumer clientId=consumer-report_group-1, groupId=report_group] (Re-)joining group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:41.583+05:30","@version":"1","message":"[Consumer clientId=consumer-report_group-1, groupId=report_group] Request joining group due to: need to re-join with the given member-id: consumer-report_group-1-34869c9e-dc13-4b34-b946-aeb4bbe2ffb5","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:41.584+05:30","@version":"1","message":"[Consumer clientId=consumer-report_group-1, groupId=report_group] (Re-)joining group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:41.586+05:30","@version":"1","message":"[Consumer clientId=consumer-report_group-1, groupId=report_group] Successfully joined group with generation Generation{generationId=65, memberId='consumer-report_group-1-34869c9e-dc13-4b34-b946-aeb4bbe2ffb5', protocol='range'}","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:41.589+05:30","@version":"1","message":"[Consumer clientId=consumer-report_group-1, groupId=report_group] Finished assignment for group at generation 65: {consumer-report_group-1-34869c9e-dc13-4b34-b946-aeb4bbe2ffb5=Assignment(partitions=[report_topic-0])}","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:41.597+05:30","@version":"1","message":"[Consumer clientId=consumer-report_group-1, groupId=report_group] Successfully synced group in generation Generation{generationId=65, memberId='consumer-report_group-1-34869c9e-dc13-4b34-b946-aeb4bbe2ffb5', protocol='range'}","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:41.598+05:30","@version":"1","message":"[Consumer clientId=consumer-report_group-1, groupId=report_group] Notifying assignor about the new Assignment(partitions=[report_topic-0])","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:41.599+05:30","@version":"1","message":"[Consumer clientId=consumer-report_group-1, groupId=report_group] Adding newly assigned partitions: report_topic-0","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:41.605+05:30","@version":"1","message":"Setting offset for partition report_topic-0 to the committed offset FetchPosition{offset=15, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.101:9092 (id: 0 rack: null)], epoch=0}}","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerUtils","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:41.606+05:30","@version":"1","message":"report_group: partitions assigned: [report_topic-0]","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:42.997+05:30","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:42.997+05:30","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:05:42.998+05:30","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:07:54.080+05:30","@version":"1","message":"[Consumer clientId=consumer-report_group-1, groupId=report_group] Revoke previously assigned partitions report_topic-0","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:07:54.081+05:30","@version":"1","message":"report_group: partitions revoked: [report_topic-0]","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:07:54.082+05:30","@version":"1","message":"[Consumer clientId=consumer-report_group-1, groupId=report_group] Member consumer-report_group-1-34869c9e-dc13-4b34-b946-aeb4bbe2ffb5 sending LeaveGroup request to coordinator 192.168.0.101:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:07:54.082+05:30","@version":"1","message":"[Consumer clientId=consumer-report_group-1, groupId=report_group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:07:54.082+05:30","@version":"1","message":"[Consumer clientId=consumer-report_group-1, groupId=report_group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:07:54.083+05:30","@version":"1","message":"[Consumer clientId=consumer-report_group-1, groupId=report_group] Unsubscribed all topics or patterns and assigned partitions","logger_name":"org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:07:54.084+05:30","@version":"1","message":"[Consumer clientId=consumer-report_group-1, groupId=report_group] Resetting generation and member id due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:07:54.084+05:30","@version":"1","message":"[Consumer clientId=consumer-report_group-1, groupId=report_group] Request joining group due to: consumer pro-actively leaving the group","logger_name":"org.apache.kafka.clients.consumer.internals.ConsumerCoordinator","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:07:54.153+05:30","@version":"1","message":"Metrics scheduler closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:07:54.153+05:30","@version":"1","message":"Closing reporter org.apache.kafka.common.metrics.JmxReporter","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:07:54.153+05:30","@version":"1","message":"Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:07:54.153+05:30","@version":"1","message":"Metrics reporters closed","logger_name":"org.apache.kafka.common.metrics.Metrics","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:07:54.159+05:30","@version":"1","message":"App info kafka.consumer for consumer-report_group-1 unregistered","logger_name":"org.apache.kafka.common.utils.AppInfoParser","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:07:54.160+05:30","@version":"1","message":"report_group: Consumer stopped","logger_name":"org.springframework.kafka.listener.KafkaMessageListenerContainer","thread_name":"org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:07:54.162+05:30","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-02-20T16:07:54.164+05:30","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000}
